// // 1) Составьте программу, которая принимает с клавиатуры числа,
// // пока не будет введено значение 99. Программа должна подсчитать,
// // сколько чисел было введено с клавиатуры (не считая значения 99)
// // и вывести эту информацию на экран.
// // ввод: 59, 74, 48, 70, 99 ⇒ вывод: кол-во чисел - 4

//  Вариант1
let count = 0;
let number = 0;

while (number !== 99) {
    number = parseInt(prompt("Введите число:"));
    if (number !== 99) {
        count++;
    }
}

console.log("Количество чисел: " + count);

// // -------------------------------------------------------------------

// Вариант2
let count = 0;
for (let number = 0; number < 99; count++) {
    if (number !== 99) {
        number = parseInt(prompt("Введите число"));
    }
}
console.log(count);

// // -------------------------------------------------------------------

// Вариант3
let count = 0;
for (
    let number = 0;
    number !== 99;
    number = parseInt(prompt("Введите число"))
) {
    if (number !== 99) {
        count++;
    }
}

console.log("Количество чисел: " + count);

// // -------------------------------------------------------------------
// //  2) Составьте программу, которая принимает с клавиатуры числа,
// //    пока не будет введено значение 999. Программа должна подсчитать,
// //    сколько чисел было введено с клавиатуры, чему равна сумма этих
// //    чисел (не считая значения 999), и вывести эту информацию на экран.
// //    ввод: 89, 174, 27, 999 ⇒ вывод: кол-во чисел - 3; сумма = 290

let count = 0;
let number = 0;
let sum = 0;

while (number !== 999) {
    number = parseInt(prompt("Введите число:"));
    if (number !== 999) {
        count++;
        sum += number;
    }
}

console.log("Количество чисел: " + count + "; Сумма чисел: " + sum);

// // -------------------------------------------------------------------
// // 3) Напишите функцию, которая возвращает объект,
// //    составленный из значений вложенных массивов.
// //    Первое значение - ключ, второе - значение.
// //    Ожидаемый результат: [['a', 1], ['b', 2]] ===> { a: 1, b: 2 }

// //    const data = [['a', 1], ['b', 2]];
// //    console.log(fromPairs(data))  // { 'a': 1, 'b': 2 }

let array = [
    ["a", 1],
    ["b", 2],
];
function mix(array) {
    let result = {};

    for (let i = 0; i < array.length; i++) {
        let key = array[i][0];
        let value = array[i][1];
        result[key] = value;
    }

    return result;
}

console.log(mix(array));
